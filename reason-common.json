{
  "scopeName": "source.reason.common",
  "repository": {
    "bind-item-module": {
      "patterns": [
        { "include": "#item-let-module-defn-0" },
        { "include": "#item-let-module-defn-1" },
        { "include": "#item-let-module-defn-2" },
        { "include": "#item-let-module-defn-3" },
        { "include": "#comment" }
      ]
    },
    "bind-item-type": {
      "patterns": [
        { "include": "#item-type-defn-0" },
        { "include": "#item-type-defn-1" },
        { "include": "#item-type-defn-2" },
        { "include": "#comment" }
      ]
    },
    "comment": {
      "patterns": [
        {
          "contentName": "comment.block.reason",
          "begin": "\\s*+((/\\*))",
          "end": "(\\s*(\\*/))",
          "captures": {
            "1": { "name": "comment.block.reason" },
            "2": { "name": "punctuation.definition.comment.reason" }
          }
        }
      ]
    },
    "identifier-constructor": {
      "comment": "FIXME",
      "name": "constant.language.constructor.reason",
      "match": "\\b([A-Z]+[[:word:]]*)\\b(?![[:space:]]*\\.)"
    },
    "identifier-module": {
      "name": "entity.name.class.reason",
      "match": "\\b([A-Z]+[[:word:]]*)\\b"
    },
    "identifier-type": {
      "name": "support.type.reason",
      "match": "(?<!')\\b([a-z][[:word:]]*)\\b"
    },
    "identifier-type-variable": {
      "match": "(')\\b([a-z][[:word:]]*)\\b",
      "captures": {
        "2": { "name": "variable.parameter.type.reason" }
      }
    },
    "item-include": {
      "begin": "\\b(include)\\b",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "keyword.control.import.include.reason" }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.reason" }
      }
    },
    "item-let-decl": {
      "comment": "FIXME: anchors",
      "begin": "\\b(let)\\b",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "storage.type.let.reason" }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#item-let-decl-0" },
        { "include": "#item-let-decl-1" },
        { "include": "#comment" }
      ]
    },
    "item-let-decl-0": {
      "begin": "(?<=let)[[:space:]]+(?!\\bmodule\\b)\\b([a-z][[:word:]]*)\\b",
      "end": "(?=:)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.reason" }
      },
      "patterns": [
        { "include": "#comment" }
      ]
    },
    "item-let-decl-1": {
      "begin": ":",
      "end": "(?=;)",
      "beginCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#identifier-type" },
        { "include": "#identifier-type-variable" },
        {
          "name": "keyword.operator.reason",
          "match": "=>"
        },
        { "include": "#comment" }
      ]
    },
    "item-let-defn": {
      "begin": "\\b(let)\\b",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "storage.type.let.reason" }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#item-let-module-defn" },
        { "include": "#item-let-rec-val-defn" },
        { "include": "#item-let-val-defn" },
        { "include": "#comment" }
      ]
    },
    "item-let-module-defn": {
      "begin": "\\b(module)\\b",
      "end": "(?=;)",
      "beginCaptures": {
        "1": { "name": "storage.type.module.reason" }
      },
      "patterns": [
        { "include": "#bind-item-module" }
      ]
    },
    "item-let-module-defn-0": {
      "name": "storage.modifier.reason",
      "match": "\\b(and|rec)\\b"
    },
    "item-let-module-defn-1": {
      "begin": "\\b([A-Z]+[[:word:]]*)\\b",
      "end": "(?=:|=)",
      "beginCaptures": {
        "1": { "name": "entity.name.class.module.reason" }
      },
      "patterns": [
        { "include": "#comment" }
      ]
    },
    "item-let-module-defn-2": {
      "begin": ":",
      "end": "(?==)",
      "beginCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        {
          "begin": "{",
          "end": "}",
          "beginCaptures": {
            "0": { "name": "meta.brace.curly.reason" }
          },
          "endCaptures": {
            "0": { "name": "meta.brace.curly.reason" }
          },
          "patterns": [
            { "include": "#module-type-items" }
          ]
        },
        { "include": "#comment" }
      ]
    },
    "item-let-module-defn-3": {
      "begin": "=",
      "end": "(?=\\b(and)\\b|;)",
      "beginCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        {
          "begin": "{",
          "end": "}",
          "beginCaptures": {
            "0": { "name": "meta.brace.curly.reason" }
          },
          "endCaptures": {
            "0": { "name": "meta.brace.curly.reason" }
          },
          "patterns": [
            { "include": "source.reason.common#module-items" }
          ]
        }
      ]
    },
    "item-let-val-defn": {
      "comment": "FIXME: anchors",
      "patterns": [
        {
          "name": "storage.modifier.rec.reason",
          "match": "\\b(rec)\\b"
        },
        { "include": "#item-let-val-defn-0" },
        { "include": "#item-let-val-defn-1" },
        { "include": "#item-let-val-defn-2" },
        { "include": "#item-let-val-defn-3" }
      ]
    },
    "item-let-val-defn-0": {
      "begin": "(?<=rec)[[:space:]]+(?!\\bmodule\\b)\\b([a-z][[:word:]]*)\\b",
      "end": "(?=[a-z_]|\\(|=|=>)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.reason" }
      },
      "patterns": [
        { "include": "#comment" }
      ]
    },
    "item-let-val-defn-1": {
      "comment": "FIXME",
      "begin": "(?<=let)[[:space:]]+(?!\\bmodule|rec\\b)\\b([a-z][[:word:]]*)\\b",
      "end": "(?==)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.reason" }
      },
      "patterns": [
        { "include": "#identifier-module" },
        { "include": "#item-let-val-defn-2" },
        { "include": "#comment" }
      ]
    },
    "item-let-val-defn-2": {
      "begin": "\\b([a-z_][[:word:]]*)\\b",
      "end": "(?=[a-z_]|\\(|{|,|}|\\)|=|=>)",
      "beginCaptures": {
        "1": { "name": "variable.parameter.function.reason" }
      },
      "patterns": [
        { "include": "#comment" }
      ]
    },
    "item-let-val-defn-3": {
      "comment": "FIXME",
      "begin": "=>?",
      "end": "(?=;)",
      "beginCaptures": {
       "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#literal" },
        { "include": "#module-items" },
        { "include": "#identifier-constructor" },
        { "include": "#identifier-module" },
        {
          "name": "storage.type.let.reason",
          "match": "\\b(let)\\b"
        },
        {
          "name": "keyword.control.reason",
          "match": "\\b(else|downto|for|if|in|not|ref|switch|then|to|when|warning|while)\\b|\\||=>?|:=|-|\\+|/|\\*|\\^|&&|\\|\\||<=?|>=?"
        }
      ]
    },
    "item-module-type-defn": {
      "begin": "\\b(module)\\b",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "storage.type.module.reason" }
      },
      "endCaptures": {
        "1": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#item-module-type-defn-0" },
        { "include": "#item-module-type-defn-1" }
      ]
    },
    "item-module-type-defn-0": {
      "begin": "\\b(type)\\b",
      "end": "(?==)",
      "beginCaptures": {
        "1": { "name": "keyword.other.type.reason" }
      },
      "patterns": [
        { "include": "#identifier-module" }
      ]
    },
    "item-module-type-defn-1": {
      "begin": "=",
      "end": "(?=;)",
      "patterns": [
        {
          "begin": "{",
          "end": "}",
          "patterns": [
            { "include": "#module-type-items" }
          ]
        }
      ]
    },
    "item-open": {
      "begin": "\\b(open)\\b",
      "end": ";",
      "beginCaptures": {
        "0": { "name": "keyword.control.import.include.reason" }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#identifier-module" }
      ]
    },
    "item-type-defn": {
      "name": "meta.type.reason",
      "begin": "\\b(type)\\b",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "keyword.other.type.reason" }
      },
      "endCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#bind-item-type" }
      ]
    },
    "item-type-defn-0": {
      "match": "\\b(and)|(nonrec)\\b",
      "captures": {
        "1": { "name": "keyword.other.type.reason" },
        "2": { "name": "storage.modifier.nonrec.reason" }
      }
    },
    "item-type-defn-1": {
      "patterns": [
        { "include": "#identifier-type" },
        { "include": "#identifier-type-variable" }
      ]
    },
    "item-type-defn-2": {
      "begin": "=",
      "end": "(?=\\b(and)\\b|;)",
      "beginCaptures": {
        "0": { "name": "keyword.operator.reason" }
      },
      "patterns": [
        { "include": "#type-items" },
        { "include": "#comment" }
      ]
    },
    "literal": {
      "patterns": [
        { "include": "#literal-boolean" },
        { "include": "#literal-numeric" },
        { "include": "#literal-string" },
        { "include": "#literal-unit" }
      ]
    },
    "literal-boolean": {
      "name": "constant.language.boolean.reason",
      "match": "\\b(false|true)\\b"
    },
    "literal-numeric": {
      "name": "constant.numeric.reason",
      "match": "\\b(?<=[^$])((0(x|X)[0-9a-fA-F]+)|(0(o|O)[0-7]+)|(0(b|B)(0|1)+)|(([0-9]+(\\.[0-9]+)?))([eE]([+-]?)[0-9]+(\\.[0-9]+)?)?)\\b"
    },
    "literal-string": {
			"begin": "\"",
			"end": "\"|(?:[^\\\\\\n]$)",
			"name": "string.double.reason"
    },
    "literal-unit": {
      "name": "constant.language.unit.reason",
      "match": "\\(\\)"
    },
    "module-items": {
      "patterns": [
        { "include": "#item-include" },
        { "include": "#item-let-defn" },
        { "include": "#item-module-type-defn" },
        { "include": "#item-open" },
        { "include": "#item-type-defn" },
        { "include": "#comment" }
      ]
    },
    "module-type-items": {
      "patterns": [
        { "include": "#item-include" },
        { "include": "#item-let-decl" },
        { "include": "#item-open" },
        { "include": "#item-type-defn" },
        { "include": "#comment" }
      ]
    },
    "type-items": {
      "begin": "\\|",
      "end": "(?=\\b(and)\\b|;|\\|)",
      "beginCaptures": {
        "0": { "name": "keyword.other.reason" }
      },
      "patterns": [
        { "include": "#identifier-constructor" },
        { "include": "#identifier-module" },
        { "include": "#identifier-type" },
        { "include": "#identifier-type-variable" },
        { "include": "#comment" }
      ]
    }
  }
}
